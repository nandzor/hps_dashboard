version: '3.8'

services:
  cctv_app:
    build:
      context: .
      dockerfile: ./docker/frankenphp/Dockerfile.staging
      args:
        - ENVIRONMENT=staging
    container_name: cctv_app_staging
    ports:
      - "9001:80"
    volumes:
      - .:/app
      - ./storage:/app/storage
      - ./bootstrap/cache:/app/bootstrap/cache
      - vite_node_modules:/app/node_modules
    networks:
      - cctv_network
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=staging
      - APP_DEBUG=true
      - DB_HOST=postgresql
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - FRANKENPHP_WORKERS=16
      - HORIZON_WORKERS=8

  postgresql:
    image: postgres:17
    container_name: cctv_postgres_staging
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cctv_network
    restart: unless-stopped
    environment:
      - POSTGRES_DB=cctv_dashboard
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=kambin
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cctv_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cctv_redis_staging
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - cctv_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  vite:
    image: node:20-alpine
    container_name: cctv_vite_staging
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - vite_node_modules:/app/node_modules
    networks:
      - cctv_network
    restart: unless-stopped
    depends_on:
      - cctv_app
    environment:
      - NODE_ENV=development
      - VITE_APP_URL=http://localhost:9001
      - VITE_DEV_SERVER_HOST=0.0.0.0
      - VITE_DEV_SERVER_PORT=5173
    working_dir: /app
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        npm ci &&
        echo 'Starting Vite development server...' &&
        npm run dev
      "

volumes:
  postgres_data:
  redis_data:
  vite_node_modules:

networks:
  cctv_network:
    driver: bridge
